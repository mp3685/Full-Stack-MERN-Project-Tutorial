{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\r\n * Kickstart an elegant, consistent, and simple baseline to build upon.\r\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n    children = _props$children === void 0 ? null : _props$children,\n    classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * You can wrap a node.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","map":{"version":3,"names":["_extends","React","PropTypes","withStyles","exactProp","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","body","theme","color","palette","text","primary","typography","body2","backgroundColor","background","default","common","white","styles","fontWeight","fontWeightBold","margin","CssBaseline","props","_props$children","children","classes","createElement","Fragment","process","env","NODE_ENV","propTypes","node","object","name"],"sources":["C:/Users/mjper/OneDrive/Documents/Coding Projects/Full-Stack-MERN-Project-Tutorial/client/node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '../styles/withStyles';\r\nimport { exactProp } from '@material-ui/utils';\r\nexport var html = {\r\n  WebkitFontSmoothing: 'antialiased',\r\n  // Antialiasing.\r\n  MozOsxFontSmoothing: 'grayscale',\r\n  // Antialiasing.\r\n  // Change from `box-sizing: content-box` so that `width`\r\n  // is not affected by `padding` or `border`.\r\n  boxSizing: 'border-box'\r\n};\r\nexport var body = function body(theme) {\r\n  return _extends({\r\n    color: theme.palette.text.primary\r\n  }, theme.typography.body2, {\r\n    backgroundColor: theme.palette.background.default,\r\n    '@media print': {\r\n      // Save printer ink.\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  });\r\n};\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    '@global': {\r\n      html: html,\r\n      '*, *::before, *::after': {\r\n        boxSizing: 'inherit'\r\n      },\r\n      'strong, b': {\r\n        fontWeight: theme.typography.fontWeightBold\r\n      },\r\n      body: _extends({\r\n        margin: 0\r\n      }, body(theme), {\r\n        // Add support for document.body.requestFullScreen().\r\n        // Other elements, if background transparent, are not supported.\r\n        '&::backdrop': {\r\n          backgroundColor: theme.palette.background.default\r\n        }\r\n      })\r\n    }\r\n  };\r\n};\r\n/**\r\n * Kickstart an elegant, consistent, and simple baseline to build upon.\r\n */\r\n\r\nfunction CssBaseline(props) {\r\n  /* eslint-disable no-unused-vars */\r\n  var _props$children = props.children,\r\n      children = _props$children === void 0 ? null : _props$children,\r\n      classes = props.classes;\r\n  /* eslint-enable no-unused-vars */\r\n\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\r\n}\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * You can wrap a node.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object\r\n} : void 0;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  // eslint-disable-next-line\r\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\r\n}\r\n\r\nexport default withStyles(styles, {\r\n  name: 'MuiCssBaseline'\r\n})(CssBaseline);"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAO,IAAIC,IAAI,GAAG;EAChBC,mBAAmB,EAAE,aAAa;EAClC;EACAC,mBAAmB,EAAE,WAAW;EAChC;EACA;EACA;EACAC,SAAS,EAAE;AACb,CAAC;AACD,OAAO,IAAIC,IAAI,GAAG,SAASA,IAAIA,CAACC,KAAK,EAAE;EACrC,OAAOV,QAAQ,CAAC;IACdW,KAAK,EAAED,KAAK,CAACE,OAAO,CAACC,IAAI,CAACC;EAC5B,CAAC,EAAEJ,KAAK,CAACK,UAAU,CAACC,KAAK,EAAE;IACzBC,eAAe,EAAEP,KAAK,CAACE,OAAO,CAACM,UAAU,CAACC,OAAO;IACjD,cAAc,EAAE;MACd;MACAF,eAAe,EAAEP,KAAK,CAACE,OAAO,CAACQ,MAAM,CAACC;IACxC;EACF,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAMA,CAACZ,KAAK,EAAE;EACzC,OAAO;IACL,SAAS,EAAE;MACTL,IAAI,EAAEA,IAAI;MACV,wBAAwB,EAAE;QACxBG,SAAS,EAAE;MACb,CAAC;MACD,WAAW,EAAE;QACXe,UAAU,EAAEb,KAAK,CAACK,UAAU,CAACS;MAC/B,CAAC;MACDf,IAAI,EAAET,QAAQ,CAAC;QACbyB,MAAM,EAAE;MACV,CAAC,EAAEhB,IAAI,CAACC,KAAK,CAAC,EAAE;QACd;QACA;QACA,aAAa,EAAE;UACbO,eAAe,EAAEP,KAAK,CAACE,OAAO,CAACM,UAAU,CAACC;QAC5C;MACF,CAAC;IACH;EACF,CAAC;AACH,CAAC;AACD;AACA;AACA;;AAEA,SAASO,WAAWA,CAACC,KAAK,EAAE;EAC1B;EACA,IAAIC,eAAe,GAAGD,KAAK,CAACE,QAAQ;IAChCA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,eAAe;IAC9DE,OAAO,GAAGH,KAAK,CAACG,OAAO;EAC3B;;EAEA,OAAO,aAAa7B,KAAK,CAAC8B,aAAa,CAAC9B,KAAK,CAAC+B,QAAQ,EAAE,IAAI,EAAEH,QAAQ,CAAC;AACzE;AAEAI,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,WAAW,CAACU,SAAS,GAAG;EAC9D;EACA;EACA;EACA;;EAEA;AACF;AACA;EACEP,QAAQ,EAAE3B,SAAS,CAACmC,IAAI;EAExB;AACF;AACA;AACA;EACEP,OAAO,EAAE5B,SAAS,CAACoC;AACrB,CAAC,GAAG,KAAK,CAAC;AAEV,IAAIL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC;EACAT,WAAW,CAAC,WAAW,GAAG,EAAE,CAAC,GAAGtB,SAAS,CAACsB,WAAW,CAACU,SAAS,CAAC;AAClE;AAEA,eAAejC,UAAU,CAACmB,MAAM,EAAE;EAChCiB,IAAI,EAAE;AACR,CAAC,CAAC,CAACb,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}