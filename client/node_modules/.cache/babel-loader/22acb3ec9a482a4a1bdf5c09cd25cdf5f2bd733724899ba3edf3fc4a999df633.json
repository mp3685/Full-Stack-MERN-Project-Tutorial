{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport unsupportedProp from '../utils/unsupportedProp';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      transition: theme.transitions.create(['color', 'padding-top'], {\n        duration: theme.transitions.duration.short\n      }),\n      padding: '6px 12px 8px',\n      minWidth: 80,\n      maxWidth: 168,\n      color: theme.palette.text.secondary,\n      flex: '1',\n      '&$iconOnly': {\n        paddingTop: 16\n      },\n      '&$selected': {\n        paddingTop: 6,\n        color: theme.palette.primary.main\n      }\n    },\n    /* Pseudo-class applied to the root element if selected. */\n    selected: {},\n    /* Pseudo-class applied to the root element if `showLabel={false}` and not selected. */\n    iconOnly: {},\n    /* Styles applied to the span element that wraps the icon and label. */\n    wrapper: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      flexDirection: 'column'\n    },\n    /* Styles applied to the label's span element. */\n    label: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(12),\n      opacity: 1,\n      transition: 'font-size 0.2s, opacity 0.2s',\n      transitionDelay: '0.1s',\n      '&$iconOnly': {\n        opacity: 0,\n        transitionDelay: '0s'\n      },\n      '&$selected': {\n        fontSize: theme.typography.pxToRem(14)\n      }\n    }\n  };\n};\nvar BottomNavigationAction = /*#__PURE__*/React.forwardRef(function BottomNavigationAction(props, ref) {\n  var classes = props.classes,\n    className = props.className,\n    icon = props.icon,\n    label = props.label,\n    onChange = props.onChange,\n    onClick = props.onClick,\n    selected = props.selected,\n    showLabel = props.showLabel,\n    value = props.value,\n    other = _objectWithoutProperties(props, [\"classes\", \"className\", \"icon\", \"label\", \"onChange\", \"onClick\", \"selected\", \"showLabel\", \"value\"]);\n  var handleChange = function handleChange(event) {\n    if (onChange) {\n      onChange(event, value);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, selected ? classes.selected : !showLabel && classes.iconOnly),\n    focusRipple: true,\n    onClick: handleChange\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.wrapper\n  }, icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, selected ? classes.selected : !showLabel && classes.iconOnly)\n  }, label)));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigationAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * This prop isn't supported.\r\n   * Use the `component` prop if you need to change the children structure.\r\n   */\n  children: unsupportedProp,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * The icon element.\r\n   */\n  icon: PropTypes.node,\n  /**\r\n   * The label element.\r\n   */\n  label: PropTypes.node,\n  /**\r\n   * @ignore\r\n   */\n  onChange: PropTypes.func,\n  /**\r\n   * @ignore\r\n   */\n  onClick: PropTypes.func,\n  /**\r\n   * @ignore\r\n   */\n  selected: PropTypes.bool,\n  /**\r\n   * If `true`, the `BottomNavigationAction` will show its label.\r\n   * By default, only the selected `BottomNavigationAction`\r\n   * inside `BottomNavigation` will show its label.\r\n   */\n  showLabel: PropTypes.bool,\n  /**\r\n   * You can provide your own value. Otherwise, we fallback to the child position index.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBottomNavigationAction'\n})(BottomNavigationAction);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","ButtonBase","unsupportedProp","styles","theme","root","transition","transitions","create","duration","short","padding","minWidth","maxWidth","color","palette","text","secondary","flex","paddingTop","primary","main","selected","iconOnly","wrapper","display","alignItems","justifyContent","width","flexDirection","label","fontFamily","typography","fontSize","pxToRem","opacity","transitionDelay","BottomNavigationAction","forwardRef","props","ref","classes","className","icon","onChange","onClick","showLabel","value","other","handleChange","event","createElement","focusRipple","process","env","NODE_ENV","propTypes","children","object","string","node","func","bool","any","name"],"sources":["C:/Users/mjper/OneDrive/Documents/Coding Projects/Full-Stack-MERN-Project-Tutorial/client/node_modules/@material-ui/core/esm/BottomNavigationAction/BottomNavigationAction.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport ButtonBase from '../ButtonBase';\r\nimport unsupportedProp from '../utils/unsupportedProp';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      transition: theme.transitions.create(['color', 'padding-top'], {\r\n        duration: theme.transitions.duration.short\r\n      }),\r\n      padding: '6px 12px 8px',\r\n      minWidth: 80,\r\n      maxWidth: 168,\r\n      color: theme.palette.text.secondary,\r\n      flex: '1',\r\n      '&$iconOnly': {\r\n        paddingTop: 16\r\n      },\r\n      '&$selected': {\r\n        paddingTop: 6,\r\n        color: theme.palette.primary.main\r\n      }\r\n    },\r\n\r\n    /* Pseudo-class applied to the root element if selected. */\r\n    selected: {},\r\n\r\n    /* Pseudo-class applied to the root element if `showLabel={false}` and not selected. */\r\n    iconOnly: {},\r\n\r\n    /* Styles applied to the span element that wraps the icon and label. */\r\n    wrapper: {\r\n      display: 'inline-flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: '100%',\r\n      flexDirection: 'column'\r\n    },\r\n\r\n    /* Styles applied to the label's span element. */\r\n    label: {\r\n      fontFamily: theme.typography.fontFamily,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      opacity: 1,\r\n      transition: 'font-size 0.2s, opacity 0.2s',\r\n      transitionDelay: '0.1s',\r\n      '&$iconOnly': {\r\n        opacity: 0,\r\n        transitionDelay: '0s'\r\n      },\r\n      '&$selected': {\r\n        fontSize: theme.typography.pxToRem(14)\r\n      }\r\n    }\r\n  };\r\n};\r\nvar BottomNavigationAction = /*#__PURE__*/React.forwardRef(function BottomNavigationAction(props, ref) {\r\n  var classes = props.classes,\r\n      className = props.className,\r\n      icon = props.icon,\r\n      label = props.label,\r\n      onChange = props.onChange,\r\n      onClick = props.onClick,\r\n      selected = props.selected,\r\n      showLabel = props.showLabel,\r\n      value = props.value,\r\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"icon\", \"label\", \"onChange\", \"onClick\", \"selected\", \"showLabel\", \"value\"]);\r\n\r\n  var handleChange = function handleChange(event) {\r\n    if (onChange) {\r\n      onChange(event, value);\r\n    }\r\n\r\n    if (onClick) {\r\n      onClick(event);\r\n    }\r\n  };\r\n\r\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\r\n    ref: ref,\r\n    className: clsx(classes.root, className, selected ? classes.selected : !showLabel && classes.iconOnly),\r\n    focusRipple: true,\r\n    onClick: handleChange\r\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\r\n    className: classes.wrapper\r\n  }, icon, /*#__PURE__*/React.createElement(\"span\", {\r\n    className: clsx(classes.label, selected ? classes.selected : !showLabel && classes.iconOnly)\r\n  }, label)));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigationAction.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * This prop isn't supported.\r\n   * Use the `component` prop if you need to change the children structure.\r\n   */\r\n  children: unsupportedProp,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The icon element.\r\n   */\r\n  icon: PropTypes.node,\r\n\r\n  /**\r\n   * The label element.\r\n   */\r\n  label: PropTypes.node,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onClick: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  selected: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the `BottomNavigationAction` will show its label.\r\n   * By default, only the selected `BottomNavigationAction`\r\n   * inside `BottomNavigation` will show its label.\r\n   */\r\n  showLabel: PropTypes.bool,\r\n\r\n  /**\r\n   * You can provide your own value. Otherwise, we fallback to the child position index.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiBottomNavigationAction'\r\n})(BottomNavigationAction);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}