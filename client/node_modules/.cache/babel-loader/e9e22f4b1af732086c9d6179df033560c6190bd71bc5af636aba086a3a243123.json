{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport debounce from '../utils/debounce';\nimport withStyles from '../styles/withStyles';\nimport isMuiElement from '../utils/isMuiElement';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    boxSizing: 'border-box',\n    flexShrink: 0\n  },\n  /* Styles applied to the `div` element that wraps the children. */\n  tile: {\n    position: 'relative',\n    display: 'block',\n    // In case it's not rendered with a div.\n    height: '100%',\n    overflow: 'hidden'\n  },\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullHeight: {\n    height: '100%',\n    transform: 'translateX(-50%)',\n    position: 'relative',\n    left: '50%'\n  },\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullWidth: {\n    width: '100%',\n    position: 'relative',\n    transform: 'translateY(-50%)',\n    top: '50%'\n  }\n};\nvar fit = function fit(imgEl, classes) {\n  if (!imgEl || !imgEl.complete) {\n    return;\n  }\n  if (imgEl.width / imgEl.height > imgEl.parentElement.offsetWidth / imgEl.parentElement.offsetHeight) {\n    var _imgEl$classList, _imgEl$classList2;\n    (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, _toConsumableArray(classes.imgFullWidth.split(' ')));\n    (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, _toConsumableArray(classes.imgFullHeight.split(' ')));\n  } else {\n    var _imgEl$classList3, _imgEl$classList4;\n    (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, _toConsumableArray(classes.imgFullHeight.split(' ')));\n    (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, _toConsumableArray(classes.imgFullWidth.split(' ')));\n  }\n};\nfunction ensureImageCover(imgEl, classes) {\n  if (!imgEl) {\n    return;\n  }\n  if (imgEl.complete) {\n    fit(imgEl, classes);\n  } else {\n    imgEl.addEventListener('load', function () {\n      fit(imgEl, classes);\n    });\n  }\n}\nvar warnedOnce = false;\n/**\r\n * ⚠️ The GridList component was renamed to ImageList to align with the current Material Design naming.\r\n *\r\n * You should use `import { ImageListItem } from '@material-ui/core'`\r\n * or `import ImageListItem from '@material-ui/core/ImageListItem'`.\r\n */\n\nvar GridListTile = /*#__PURE__*/React.forwardRef(function GridListTile(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: The GridListTile component was renamed to ImageListItem to align with the current Material Design naming.', '', \"You should use `import { ImageListItem } from '@material-ui/core'`\", \"or `import ImageListItem from '@material-ui/core/ImageListItem'`.\"].join('\\n'));\n    }\n  } // cols rows default values are for docs only\n\n  var children = props.children,\n    classes = props.classes,\n    className = props.className,\n    _props$cols = props.cols,\n    cols = _props$cols === void 0 ? 1 : _props$cols,\n    _props$component = props.component,\n    Component = _props$component === void 0 ? 'li' : _props$component,\n    _props$rows = props.rows,\n    rows = _props$rows === void 0 ? 1 : _props$rows,\n    other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"cols\", \"component\", \"rows\"]);\n  var imgRef = React.useRef(null);\n  React.useEffect(function () {\n    ensureImageCover(imgRef.current, classes);\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      fit(imgRef.current, classes);\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [classes]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tile\n  }, React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (child.type === 'img' || isMuiElement(child, ['Image'])) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        ref: imgRef\n      });\n    }\n    return child;\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridListTile.propTypes = {\n  /**\r\n   * Theoretically you can pass any node as children, but the main use case is to pass an img,\r\n   * in which case GridListTile takes care of making the image \"cover\" available space\r\n   * (similar to `background-size: cover` or to `object-fit: cover`).\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * Width of the tile in number of grid cells.\r\n   */\n  cols: PropTypes.number,\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */.elementType,\n  /**\r\n   * Height of the tile in number of grid cells.\r\n   */\n  rows: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridListTile'\n})(GridListTile);","map":{"version":3,"names":["_extends","_objectWithoutProperties","_toConsumableArray","React","PropTypes","clsx","debounce","withStyles","isMuiElement","styles","root","boxSizing","flexShrink","tile","position","display","height","overflow","imgFullHeight","transform","left","imgFullWidth","width","top","fit","imgEl","classes","complete","parentElement","offsetWidth","offsetHeight","_imgEl$classList","_imgEl$classList2","classList","remove","apply","split","add","_imgEl$classList3","_imgEl$classList4","ensureImageCover","addEventListener","warnedOnce","GridListTile","forwardRef","props","ref","process","env","NODE_ENV","console","error","join","children","className","_props$cols","cols","_props$component","component","Component","_props$rows","rows","other","imgRef","useRef","useEffect","current","handleResize","window","clear","removeEventListener","createElement","Children","map","child","isValidElement","type","cloneElement","propTypes","node","object","isRequired","string","number","elementType","name"],"sources":["C:/Users/mjper/OneDrive/Documents/Coding Projects/Full-Stack-MERN-Project-Tutorial/client/node_modules/@material-ui/core/esm/GridListTile/GridListTile.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport debounce from '../utils/debounce';\r\nimport withStyles from '../styles/withStyles';\r\nimport isMuiElement from '../utils/isMuiElement';\r\nexport var styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    boxSizing: 'border-box',\r\n    flexShrink: 0\r\n  },\r\n\r\n  /* Styles applied to the `div` element that wraps the children. */\r\n  tile: {\r\n    position: 'relative',\r\n    display: 'block',\r\n    // In case it's not rendered with a div.\r\n    height: '100%',\r\n    overflow: 'hidden'\r\n  },\r\n\r\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\r\n  imgFullHeight: {\r\n    height: '100%',\r\n    transform: 'translateX(-50%)',\r\n    position: 'relative',\r\n    left: '50%'\r\n  },\r\n\r\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\r\n  imgFullWidth: {\r\n    width: '100%',\r\n    position: 'relative',\r\n    transform: 'translateY(-50%)',\r\n    top: '50%'\r\n  }\r\n};\r\n\r\nvar fit = function fit(imgEl, classes) {\r\n  if (!imgEl || !imgEl.complete) {\r\n    return;\r\n  }\r\n\r\n  if (imgEl.width / imgEl.height > imgEl.parentElement.offsetWidth / imgEl.parentElement.offsetHeight) {\r\n    var _imgEl$classList, _imgEl$classList2;\r\n\r\n    (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, _toConsumableArray(classes.imgFullWidth.split(' ')));\r\n\r\n    (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, _toConsumableArray(classes.imgFullHeight.split(' ')));\r\n  } else {\r\n    var _imgEl$classList3, _imgEl$classList4;\r\n\r\n    (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, _toConsumableArray(classes.imgFullHeight.split(' ')));\r\n\r\n    (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, _toConsumableArray(classes.imgFullWidth.split(' ')));\r\n  }\r\n};\r\n\r\nfunction ensureImageCover(imgEl, classes) {\r\n  if (!imgEl) {\r\n    return;\r\n  }\r\n\r\n  if (imgEl.complete) {\r\n    fit(imgEl, classes);\r\n  } else {\r\n    imgEl.addEventListener('load', function () {\r\n      fit(imgEl, classes);\r\n    });\r\n  }\r\n}\r\n\r\nvar warnedOnce = false;\r\n/**\r\n * ⚠️ The GridList component was renamed to ImageList to align with the current Material Design naming.\r\n *\r\n * You should use `import { ImageListItem } from '@material-ui/core'`\r\n * or `import ImageListItem from '@material-ui/core/ImageListItem'`.\r\n */\r\n\r\nvar GridListTile = /*#__PURE__*/React.forwardRef(function GridListTile(props, ref) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!warnedOnce) {\r\n      warnedOnce = true;\r\n      console.error(['Material-UI: The GridListTile component was renamed to ImageListItem to align with the current Material Design naming.', '', \"You should use `import { ImageListItem } from '@material-ui/core'`\", \"or `import ImageListItem from '@material-ui/core/ImageListItem'`.\"].join('\\n'));\r\n    }\r\n  } // cols rows default values are for docs only\r\n\r\n\r\n  var children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$cols = props.cols,\r\n      cols = _props$cols === void 0 ? 1 : _props$cols,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? 'li' : _props$component,\r\n      _props$rows = props.rows,\r\n      rows = _props$rows === void 0 ? 1 : _props$rows,\r\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"cols\", \"component\", \"rows\"]);\r\n\r\n  var imgRef = React.useRef(null);\r\n  React.useEffect(function () {\r\n    ensureImageCover(imgRef.current, classes);\r\n  });\r\n  React.useEffect(function () {\r\n    var handleResize = debounce(function () {\r\n      fit(imgRef.current, classes);\r\n    });\r\n    window.addEventListener('resize', handleResize);\r\n    return function () {\r\n      handleResize.clear();\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [classes]);\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, className),\r\n    ref: ref\r\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\r\n    className: classes.tile\r\n  }, React.Children.map(children, function (child) {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return null;\r\n    }\r\n\r\n    if (child.type === 'img' || isMuiElement(child, ['Image'])) {\r\n      return /*#__PURE__*/React.cloneElement(child, {\r\n        ref: imgRef\r\n      });\r\n    }\r\n\r\n    return child;\r\n  })));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? GridListTile.propTypes = {\r\n  /**\r\n   * Theoretically you can pass any node as children, but the main use case is to pass an img,\r\n   * in which case GridListTile takes care of making the image \"cover\" available space\r\n   * (similar to `background-size: cover` or to `object-fit: cover`).\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * Width of the tile in number of grid cells.\r\n   */\r\n  cols: PropTypes.number,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * Height of the tile in number of grid cells.\r\n   */\r\n  rows: PropTypes.number\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiGridListTile'\r\n})(GridListTile);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}