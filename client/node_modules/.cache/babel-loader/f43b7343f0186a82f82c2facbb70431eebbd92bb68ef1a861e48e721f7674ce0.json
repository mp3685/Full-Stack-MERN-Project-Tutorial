{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\r\n * Will automatically set dynamic row height\r\n * based on the material table element parent (head, body, etc).\r\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n    className = props.className,\n    _props$component = props.component,\n    Component = _props$component === void 0 ? defaultComponent : _props$component,\n    _props$hover = props.hover,\n    hover = _props$hover === void 0 ? false : _props$hover,\n    _props$selected = props.selected,\n    selected = _props$selected === void 0 ? false : _props$selected,\n    other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\r\n   * Should be valid <tr> children such as `TableCell`.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */.elementType,\n  /**\r\n   * If `true`, the table row will shade on hover.\r\n   */\n  hover: PropTypes.bool,\n  /**\r\n   * If `true`, the table row will have the selected shading.\r\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","Tablelvl2Context","alpha","styles","theme","root","color","display","verticalAlign","outline","backgroundColor","palette","action","hover","secondary","main","selectedOpacity","selected","head","footer","defaultComponent","TableRow","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$hover","_props$selected","other","tablelvl2","useContext","createElement","variant","role","process","env","NODE_ENV","propTypes","children","node","object","isRequired","string","elementType","bool","name"],"sources":["C:/Users/mjper/OneDrive/Documents/Coding Projects/Full-Stack-MERN-Project-Tutorial/client/node_modules/@material-ui/core/esm/TableRow/TableRow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\r\nimport { alpha } from '../styles/colorManipulator';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      color: 'inherit',\r\n      display: 'table-row',\r\n      verticalAlign: 'middle',\r\n      // We disable the focus ring for mouse, touch and keyboard users.\r\n      outline: 0,\r\n      '&$hover:hover': {\r\n        backgroundColor: theme.palette.action.hover\r\n      },\r\n      '&$selected, &$selected:hover': {\r\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\r\n      }\r\n    },\r\n\r\n    /* Pseudo-class applied to the root element if `selected={true}`. */\r\n    selected: {},\r\n\r\n    /* Pseudo-class applied to the root element if `hover={true}`. */\r\n    hover: {},\r\n\r\n    /* Styles applied to the root element if table variant=\"head\". */\r\n    head: {},\r\n\r\n    /* Styles applied to the root element if table variant=\"footer\". */\r\n    footer: {}\r\n  };\r\n};\r\nvar defaultComponent = 'tr';\r\n/**\r\n * Will automatically set dynamic row height\r\n * based on the material table element parent (head, body, etc).\r\n */\r\n\r\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\r\n  var classes = props.classes,\r\n      className = props.className,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\r\n      _props$hover = props.hover,\r\n      hover = _props$hover === void 0 ? false : _props$hover,\r\n      _props$selected = props.selected,\r\n      selected = _props$selected === void 0 ? false : _props$selected,\r\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\r\n\r\n  var tablelvl2 = React.useContext(Tablelvl2Context);\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    ref: ref,\r\n    className: clsx(classes.root, className, tablelvl2 && {\r\n      'head': classes.head,\r\n      'footer': classes.footer\r\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\r\n    role: Component === defaultComponent ? null : 'row'\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\r\n  /**\r\n   * Should be valid <tr> children such as `TableCell`.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * If `true`, the table row will shade on hover.\r\n   */\r\n  hover: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the table row will have the selected shading.\r\n   */\r\n  selected: PropTypes.bool\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiTableRow'\r\n})(TableRow);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}