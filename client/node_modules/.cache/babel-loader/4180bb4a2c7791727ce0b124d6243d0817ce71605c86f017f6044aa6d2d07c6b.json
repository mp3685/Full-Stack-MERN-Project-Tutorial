{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n    classes = props.classes,\n    className = props.className,\n    _props$component = props.component,\n    Component = _props$component === void 0 ? 'div' : _props$component,\n    _props$disablePointer = props.disablePointerEvents,\n    disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n    _props$disableTypogra = props.disableTypography,\n    disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n    position = props.position,\n    variantProp = props.variant,\n    other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\r\n   * The content of the component, normally an `IconButton` or string.\r\n   */\n  children: PropTypes.node.isRequired,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */.elementType,\n  /**\r\n   * Disable pointer events on the root.\r\n   * This allows for the content of the adornment to focus the input on click.\r\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\r\n   * If children is a string then disable wrapping in a Typography component.\r\n   */\n  disableTypography: PropTypes.bool,\n  /**\r\n   * @ignore\r\n   */\n  muiFormControl: PropTypes.object,\n  /**\r\n   * The position this adornment should appear relative to the `Input`.\r\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n  /**\r\n   * The variant to use.\r\n   * Note: If you are using the `TextField` component or the `FormControl` component\r\n   * you do not have to set this manually.\r\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","Typography","withStyles","FormControlContext","useFormControl","styles","root","display","height","maxHeight","alignItems","whiteSpace","filled","marginTop","positionStart","marginRight","positionEnd","marginLeft","disablePointerEvents","pointerEvents","hiddenLabel","marginDense","InputAdornment","forwardRef","props","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","_props$disableTypogra","disableTypography","position","variantProp","variant","other","muiFormControl","process","env","NODE_ENV","console","error","createElement","Provider","value","margin","color","propTypes","node","isRequired","object","string","elementType","bool","oneOf","name"],"sources":["C:/Users/mjper/OneDrive/Documents/Coding Projects/Full-Stack-MERN-Project-Tutorial/client/node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Typography from '../Typography';\r\nimport withStyles from '../styles/withStyles';\r\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\r\nexport var styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    display: 'flex',\r\n    height: '0.01em',\r\n    // Fix IE 11 flexbox alignment. To remove at some point.\r\n    maxHeight: '2em',\r\n    alignItems: 'center',\r\n    whiteSpace: 'nowrap'\r\n  },\r\n\r\n  /* Styles applied to the root element if `variant=\"filled\"`. */\r\n  filled: {\r\n    '&$positionStart:not($hiddenLabel)': {\r\n      marginTop: 16\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the root element if `position=\"start\"`. */\r\n  positionStart: {\r\n    marginRight: 8\r\n  },\r\n\r\n  /* Styles applied to the root element if `position=\"end\"`. */\r\n  positionEnd: {\r\n    marginLeft: 8\r\n  },\r\n\r\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\r\n  disablePointerEvents: {\r\n    pointerEvents: 'none'\r\n  },\r\n\r\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\r\n  hiddenLabel: {},\r\n\r\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\r\n  marginDense: {}\r\n};\r\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\r\n  var children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? 'div' : _props$component,\r\n      _props$disablePointer = props.disablePointerEvents,\r\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\r\n      _props$disableTypogra = props.disableTypography,\r\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\r\n      position = props.position,\r\n      variantProp = props.variant,\r\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\r\n\r\n  var muiFormControl = useFormControl() || {};\r\n  var variant = variantProp;\r\n\r\n  if (variantProp && muiFormControl.variant) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (variantProp === muiFormControl.variant) {\r\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\r\n      }\r\n    }\r\n  }\r\n\r\n  if (muiFormControl && !variant) {\r\n    variant = muiFormControl.variant;\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\r\n    value: null\r\n  }, /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\r\n    ref: ref\r\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\r\n    color: \"textSecondary\"\r\n  }, children) : children));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\r\n  /**\r\n   * The content of the component, normally an `IconButton` or string.\r\n   */\r\n  children: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * Disable pointer events on the root.\r\n   * This allows for the content of the adornment to focus the input on click.\r\n   */\r\n  disablePointerEvents: PropTypes.bool,\r\n\r\n  /**\r\n   * If children is a string then disable wrapping in a Typography component.\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  muiFormControl: PropTypes.object,\r\n\r\n  /**\r\n   * The position this adornment should appear relative to the `Input`.\r\n   */\r\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\r\n\r\n  /**\r\n   * The variant to use.\r\n   * Note: If you are using the `TextField` component or the `FormControl` component\r\n   * you do not have to set this manually.\r\n   */\r\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiInputAdornment'\r\n})(InputAdornment);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}