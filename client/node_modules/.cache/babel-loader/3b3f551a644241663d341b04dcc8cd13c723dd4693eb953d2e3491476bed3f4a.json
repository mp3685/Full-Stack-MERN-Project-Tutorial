{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { HTMLElementType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Popover from '../Popover';\nimport MenuList from '../MenuList';\nimport * as ReactDOM from 'react-dom';\nimport setRef from '../utils/setRef';\nimport useTheme from '../styles/useTheme';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nexport var styles = {\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\n    // the menu.\n    maxHeight: 'calc(100% - 96px)',\n    // Add iOS momentum scrolling.\n    WebkitOverflowScrolling: 'touch'\n  },\n  /* Styles applied to the `List` component via `MenuList`. */\n  list: {\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  }\n};\nvar Menu = /*#__PURE__*/React.forwardRef(function Menu(props, ref) {\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n    children = props.children,\n    classes = props.classes,\n    _props$disableAutoFoc = props.disableAutoFocusItem,\n    disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n    _props$MenuListProps = props.MenuListProps,\n    MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\n    onClose = props.onClose,\n    onEnteringProp = props.onEntering,\n    open = props.open,\n    _props$PaperProps = props.PaperProps,\n    PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n    PopoverClasses = props.PopoverClasses,\n    _props$transitionDura = props.transitionDuration,\n    transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n    _props$TransitionProp = props.TransitionProps;\n  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;\n  var onEntering = _props$TransitionProp.onEntering,\n    TransitionProps = _objectWithoutProperties(_props$TransitionProp, [\"onEntering\"]),\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n    other = _objectWithoutProperties(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\"]);\n  var theme = useTheme();\n  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  var menuListActionsRef = React.useRef(null);\n  var contentAnchorRef = React.useRef(null);\n  var getContentAnchorEl = function getContentAnchorEl() {\n    return contentAnchorRef.current;\n  };\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n    if (onEnteringProp) {\n      onEnteringProp(element, isAppearing);\n    }\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\n\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.map(children, function (child, index) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant !== \"menu\" && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  var items = React.Children.map(children, function (child, index) {\n    if (index === activeItemIndex) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        ref: function ref(instance) {\n          // #StrictMode ready\n          contentAnchorRef.current = ReactDOM.findDOMNode(instance);\n          setRef(child.ref, instance);\n        }\n      });\n    }\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(Popover, _extends({\n    getContentAnchorEl: getContentAnchorEl,\n    classes: PopoverClasses,\n    onClose: onClose,\n    TransitionProps: _extends({\n      onEntering: handleEntering\n    }, TransitionProps),\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({}, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration\n  }, other), /*#__PURE__*/React.createElement(MenuList, _extends({\n    onKeyDown: handleListKeyDown,\n    actions: menuListActionsRef,\n    autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n    autoFocusItem: autoFocusItem,\n    variant: variant\n  }, MenuListProps, {\n    className: clsx(classes.list, MenuListProps.className)\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * A HTML element, or a function that returns it.\r\n   * It's used to set the position of the menu.\r\n   */\n  anchorEl: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\r\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\r\n   * children are not focusable. If you set this prop to `false` focus will be placed\r\n   * on the parent modal container. This has severe accessibility implications\r\n   * and should only be considered if you manage focus otherwise.\r\n   */\n  autoFocus: PropTypes.bool,\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\r\n   * unless `autoFocus` is also set to `false`. Not using the default means not\r\n   * following WAI-ARIA authoring practices. Please be considerate about possible\r\n   * accessibility implications.\r\n   */\n  disableAutoFocusItem: PropTypes.bool,\n  /**\r\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\r\n   */\n  MenuListProps: PropTypes.object,\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\n  onClose: PropTypes.func,\n  /**\r\n   * Callback fired before the Menu enters.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\r\n   * Callback fired when the Menu has entered.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\r\n   * Callback fired when the Menu is entering.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\r\n   * Callback fired before the Menu exits.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\r\n   * Callback fired when the Menu has exited.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\r\n   * Callback fired when the Menu is exiting.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\r\n   * If `true`, the menu is visible.\r\n   */\n  open: PropTypes.bool.isRequired,\n  /**\r\n   * @ignore\r\n   */\n  PaperProps: PropTypes.object,\n  /**\r\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\r\n   */\n  PopoverClasses: PropTypes.object,\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\r\n   */\n  TransitionProps: PropTypes.object,\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenu'\n})(Menu);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","isFragment","PropTypes","clsx","HTMLElementType","withStyles","Popover","MenuList","ReactDOM","setRef","useTheme","deprecatedPropType","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","styles","paper","maxHeight","WebkitOverflowScrolling","list","outline","Menu","forwardRef","props","ref","_props$autoFocus","autoFocus","children","classes","_props$disableAutoFoc","disableAutoFocusItem","_props$MenuListProps","MenuListProps","onClose","onEnteringProp","onEntering","open","_props$PaperProps","PaperProps","PopoverClasses","_props$transitionDura","transitionDuration","_props$TransitionProp","TransitionProps","_props$variant","variant","other","theme","autoFocusItem","menuListActionsRef","useRef","contentAnchorRef","getContentAnchorEl","current","handleEntering","element","isAppearing","adjustStyleForScrollbar","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","items","cloneElement","instance","findDOMNode","createElement","anchorOrigin","direction","transformOrigin","root","onKeyDown","actions","className","propTypes","anchorEl","oneOfType","func","bool","node","object","onEnter","onEntered","onExit","onExited","onExiting","isRequired","oneOf","number","shape","appear","enter","exit","name"],"sources":["C:/Users/mjper/OneDrive/Documents/Coding Projects/Full-Stack-MERN-Project-Tutorial/client/node_modules/@material-ui/core/esm/Menu/Menu.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { HTMLElementType } from '@material-ui/utils';\r\nimport withStyles from '../styles/withStyles';\r\nimport Popover from '../Popover';\r\nimport MenuList from '../MenuList';\r\nimport * as ReactDOM from 'react-dom';\r\nimport setRef from '../utils/setRef';\r\nimport useTheme from '../styles/useTheme';\r\nimport deprecatedPropType from '../utils/deprecatedPropType';\r\nvar RTL_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'right'\r\n};\r\nvar LTR_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'left'\r\n};\r\nexport var styles = {\r\n  /* Styles applied to the `Paper` component. */\r\n  paper: {\r\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\r\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\r\n    // the menu.\r\n    maxHeight: 'calc(100% - 96px)',\r\n    // Add iOS momentum scrolling.\r\n    WebkitOverflowScrolling: 'touch'\r\n  },\r\n\r\n  /* Styles applied to the `List` component via `MenuList`. */\r\n  list: {\r\n    // We disable the focus ring for mouse, touch and keyboard users.\r\n    outline: 0\r\n  }\r\n};\r\nvar Menu = /*#__PURE__*/React.forwardRef(function Menu(props, ref) {\r\n  var _props$autoFocus = props.autoFocus,\r\n      autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\r\n      children = props.children,\r\n      classes = props.classes,\r\n      _props$disableAutoFoc = props.disableAutoFocusItem,\r\n      disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\r\n      _props$MenuListProps = props.MenuListProps,\r\n      MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\r\n      onClose = props.onClose,\r\n      onEnteringProp = props.onEntering,\r\n      open = props.open,\r\n      _props$PaperProps = props.PaperProps,\r\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\r\n      PopoverClasses = props.PopoverClasses,\r\n      _props$transitionDura = props.transitionDuration,\r\n      transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\r\n      _props$TransitionProp = props.TransitionProps;\r\n  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;\r\n\r\n  var onEntering = _props$TransitionProp.onEntering,\r\n      TransitionProps = _objectWithoutProperties(_props$TransitionProp, [\"onEntering\"]),\r\n      _props$variant = props.variant,\r\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\r\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\"]);\r\n\r\n  var theme = useTheme();\r\n  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;\r\n  var menuListActionsRef = React.useRef(null);\r\n  var contentAnchorRef = React.useRef(null);\r\n\r\n  var getContentAnchorEl = function getContentAnchorEl() {\r\n    return contentAnchorRef.current;\r\n  };\r\n\r\n  var handleEntering = function handleEntering(element, isAppearing) {\r\n    if (menuListActionsRef.current) {\r\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\r\n    }\r\n\r\n    if (onEnteringProp) {\r\n      onEnteringProp(element, isAppearing);\r\n    }\r\n\r\n    if (onEntering) {\r\n      onEntering(element, isAppearing);\r\n    }\r\n  };\r\n\r\n  var handleListKeyDown = function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n\r\n      if (onClose) {\r\n        onClose(event, 'tabKeyDown');\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\r\n\r\n\r\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\r\n  // to check if there is a `selected` item. We're looking for the last `selected`\r\n  // item and use the first valid item as a fallback\r\n\r\n  React.Children.map(children, function (child, index) {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    if (!child.props.disabled) {\r\n      if (variant !== \"menu\" && child.props.selected) {\r\n        activeItemIndex = index;\r\n      } else if (activeItemIndex === -1) {\r\n        activeItemIndex = index;\r\n      }\r\n    }\r\n  });\r\n  var items = React.Children.map(children, function (child, index) {\r\n    if (index === activeItemIndex) {\r\n      return /*#__PURE__*/React.cloneElement(child, {\r\n        ref: function ref(instance) {\r\n          // #StrictMode ready\r\n          contentAnchorRef.current = ReactDOM.findDOMNode(instance);\r\n          setRef(child.ref, instance);\r\n        }\r\n      });\r\n    }\r\n\r\n    return child;\r\n  });\r\n  return /*#__PURE__*/React.createElement(Popover, _extends({\r\n    getContentAnchorEl: getContentAnchorEl,\r\n    classes: PopoverClasses,\r\n    onClose: onClose,\r\n    TransitionProps: _extends({\r\n      onEntering: handleEntering\r\n    }, TransitionProps),\r\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\r\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\r\n    PaperProps: _extends({}, PaperProps, {\r\n      classes: _extends({}, PaperProps.classes, {\r\n        root: classes.paper\r\n      })\r\n    }),\r\n    open: open,\r\n    ref: ref,\r\n    transitionDuration: transitionDuration\r\n  }, other), /*#__PURE__*/React.createElement(MenuList, _extends({\r\n    onKeyDown: handleListKeyDown,\r\n    actions: menuListActionsRef,\r\n    autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\r\n    autoFocusItem: autoFocusItem,\r\n    variant: variant\r\n  }, MenuListProps, {\r\n    className: clsx(classes.list, MenuListProps.className)\r\n  }), items));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * A HTML element, or a function that returns it.\r\n   * It's used to set the position of the menu.\r\n   */\r\n  anchorEl: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([HTMLElementType, PropTypes.func]),\r\n\r\n  /**\r\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\r\n   * children are not focusable. If you set this prop to `false` focus will be placed\r\n   * on the parent modal container. This has severe accessibility implications\r\n   * and should only be considered if you manage focus otherwise.\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\r\n   * unless `autoFocus` is also set to `false`. Not using the default means not\r\n   * following WAI-ARIA authoring practices. Please be considerate about possible\r\n   * accessibility implications.\r\n   */\r\n  disableAutoFocusItem: PropTypes.bool,\r\n\r\n  /**\r\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\r\n   */\r\n  MenuListProps: PropTypes.object,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the Menu enters.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * Callback fired when the Menu has entered.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * Callback fired when the Menu is entering.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * Callback fired before the Menu exits.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * Callback fired when the Menu has exited.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * Callback fired when the Menu is exiting.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * If `true`, the menu is visible.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  PaperProps: PropTypes.object,\r\n\r\n  /**\r\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\r\n   */\r\n  PopoverClasses: PropTypes.object,\r\n\r\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n\r\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\r\n   */\r\n  TransitionProps: PropTypes.object,\r\n\r\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   */\r\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiMenu'\r\n})(Menu);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}