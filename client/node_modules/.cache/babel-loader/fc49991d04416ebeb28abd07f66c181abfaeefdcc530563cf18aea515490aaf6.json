{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n  /* Styles applied to the title Typography element. */\n  title: {},\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n    avatar = props.avatar,\n    classes = props.classes,\n    className = props.className,\n    _props$component = props.component,\n    Component = _props$component === void 0 ? 'div' : _props$component,\n    _props$disableTypogra = props.disableTypography,\n    disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n    subheaderProp = props.subheader,\n    subheaderTypographyProps = props.subheaderTypographyProps,\n    titleProp = props.title,\n    titleTypographyProps = props.titleTypographyProps,\n    other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n  var title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n  var subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The action to display in the card header.\r\n   */\n  action: PropTypes.node,\n  /**\r\n   * The Avatar for the Card Header.\r\n   */\n  avatar: PropTypes.node,\n  /**\r\n   * @ignore\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */.elementType,\n  /**\r\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\r\n   * This can be useful to render an alternative Typography variant by wrapping\r\n   * the `title` text, and optional `subheader` text\r\n   * with the Typography component.\r\n   */\n  disableTypography: PropTypes.bool,\n  /**\r\n   * The content of the component.\r\n   */\n  subheader: PropTypes.node,\n  /**\r\n   * These props will be forwarded to the subheader\r\n   * (as long as disableTypography is not `true`).\r\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\r\n   * The content of the Card Title.\r\n   */\n  title: PropTypes.node,\n  /**\r\n   * These props will be forwarded to the title\r\n   * (as long as disableTypography is not `true`).\r\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","Typography","styles","root","display","alignItems","padding","avatar","flex","marginRight","action","alignSelf","marginTop","content","title","subheader","CardHeader","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","type","createElement","variant","color","process","env","NODE_ENV","propTypes","node","children","object","string","elementType","bool","name"],"sources":["C:/Users/mjper/OneDrive/Documents/Coding Projects/Full-Stack-MERN-Project-Tutorial/client/node_modules/@material-ui/core/esm/CardHeader/CardHeader.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport Typography from '../Typography';\r\nexport var styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: 16\r\n  },\r\n\r\n  /* Styles applied to the avatar element. */\r\n  avatar: {\r\n    flex: '0 0 auto',\r\n    marginRight: 16\r\n  },\r\n\r\n  /* Styles applied to the action element. */\r\n  action: {\r\n    flex: '0 0 auto',\r\n    alignSelf: 'flex-start',\r\n    marginTop: -8,\r\n    marginRight: -8\r\n  },\r\n\r\n  /* Styles applied to the content wrapper element. */\r\n  content: {\r\n    flex: '1 1 auto'\r\n  },\r\n\r\n  /* Styles applied to the title Typography element. */\r\n  title: {},\r\n\r\n  /* Styles applied to the subheader Typography element. */\r\n  subheader: {}\r\n};\r\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\r\n  var action = props.action,\r\n      avatar = props.avatar,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? 'div' : _props$component,\r\n      _props$disableTypogra = props.disableTypography,\r\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\r\n      subheaderProp = props.subheader,\r\n      subheaderTypographyProps = props.subheaderTypographyProps,\r\n      titleProp = props.title,\r\n      titleTypographyProps = props.titleTypographyProps,\r\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\r\n\r\n  var title = titleProp;\r\n\r\n  if (title != null && title.type !== Typography && !disableTypography) {\r\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\r\n      variant: avatar ? 'body2' : 'h5',\r\n      className: classes.title,\r\n      component: \"span\",\r\n      display: \"block\"\r\n    }, titleTypographyProps), title);\r\n  }\r\n\r\n  var subheader = subheaderProp;\r\n\r\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\r\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\r\n      variant: avatar ? 'body2' : 'body1',\r\n      className: classes.subheader,\r\n      color: \"textSecondary\",\r\n      component: \"span\",\r\n      display: \"block\"\r\n    }, subheaderTypographyProps), subheader);\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, className),\r\n    ref: ref\r\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\r\n    className: classes.avatar\r\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\r\n    className: classes.content\r\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\r\n    className: classes.action\r\n  }, action));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The action to display in the card header.\r\n   */\r\n  action: PropTypes.node,\r\n\r\n  /**\r\n   * The Avatar for the Card Header.\r\n   */\r\n  avatar: PropTypes.node,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\r\n   * This can be useful to render an alternative Typography variant by wrapping\r\n   * the `title` text, and optional `subheader` text\r\n   * with the Typography component.\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  subheader: PropTypes.node,\r\n\r\n  /**\r\n   * These props will be forwarded to the subheader\r\n   * (as long as disableTypography is not `true`).\r\n   */\r\n  subheaderTypographyProps: PropTypes.object,\r\n\r\n  /**\r\n   * The content of the Card Title.\r\n   */\r\n  title: PropTypes.node,\r\n\r\n  /**\r\n   * These props will be forwarded to the title\r\n   * (as long as disableTypography is not `true`).\r\n   */\r\n  titleTypographyProps: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiCardHeader'\r\n})(CardHeader);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}