{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\r\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\r\n * Use this component if you want to display an extra label.\r\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n    classes = props.classes,\n    className = props.className,\n    control = props.control,\n    disabledProp = props.disabled,\n    inputRef = props.inputRef,\n    label = props.label,\n    _props$labelPlacement = props.labelPlacement,\n    labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n    name = props.name,\n    onChange = props.onChange,\n    value = props.value,\n    other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * If `true`, the component appears selected.\r\n   */\n  checked: PropTypes.bool,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\r\n   */\n  control: PropTypes.element.isRequired,\n  /**\r\n   * If `true`, the control will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\n  inputRef: refType,\n  /**\r\n   * The text to be used in an enclosing label element.\r\n   */\n  label: PropTypes.node,\n  /**\r\n   * The position of the label.\r\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\r\n   * @ignore\r\n   */\n  name: PropTypes.string,\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\n  onChange: PropTypes.func,\n  /**\r\n   * The value of the component.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","refType","useFormControl","withStyles","Typography","capitalize","styles","theme","root","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","disabled","label","color","palette","text","FormControlLabel","forwardRef","props","ref","checked","classes","className","control","disabledProp","inputRef","_props$labelPlacement","labelPlacement","name","onChange","value","other","muiFormControl","controlProps","forEach","key","createElement","concat","cloneElement","component","process","env","NODE_ENV","propTypes","bool","object","string","element","isRequired","node","oneOf","func","any"],"sources":["C:/Users/mjper/OneDrive/Documents/Coding Projects/Full-Stack-MERN-Project-Tutorial/client/node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { refType } from '@material-ui/utils';\r\nimport { useFormControl } from '../FormControl';\r\nimport withStyles from '../styles/withStyles';\r\nimport Typography from '../Typography';\r\nimport capitalize from '../utils/capitalize';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      display: 'inline-flex',\r\n      alignItems: 'center',\r\n      cursor: 'pointer',\r\n      // For correct alignment with the text.\r\n      verticalAlign: 'middle',\r\n      WebkitTapHighlightColor: 'transparent',\r\n      marginLeft: -11,\r\n      marginRight: 16,\r\n      // used for row presentation of radio/checkbox\r\n      '&$disabled': {\r\n        cursor: 'default'\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\r\n    labelPlacementStart: {\r\n      flexDirection: 'row-reverse',\r\n      marginLeft: 16,\r\n      // used for row presentation of radio/checkbox\r\n      marginRight: -11\r\n    },\r\n\r\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\r\n    labelPlacementTop: {\r\n      flexDirection: 'column-reverse',\r\n      marginLeft: 16\r\n    },\r\n\r\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\r\n    labelPlacementBottom: {\r\n      flexDirection: 'column',\r\n      marginLeft: 16\r\n    },\r\n\r\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\r\n    disabled: {},\r\n\r\n    /* Styles applied to the label's Typography component. */\r\n    label: {\r\n      '&$disabled': {\r\n        color: theme.palette.text.disabled\r\n      }\r\n    }\r\n  };\r\n};\r\n/**\r\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\r\n * Use this component if you want to display an extra label.\r\n */\r\n\r\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\r\n  var checked = props.checked,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      control = props.control,\r\n      disabledProp = props.disabled,\r\n      inputRef = props.inputRef,\r\n      label = props.label,\r\n      _props$labelPlacement = props.labelPlacement,\r\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\r\n      name = props.name,\r\n      onChange = props.onChange,\r\n      value = props.value,\r\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\r\n\r\n  var muiFormControl = useFormControl();\r\n  var disabled = disabledProp;\r\n\r\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\r\n    disabled = control.props.disabled;\r\n  }\r\n\r\n  if (typeof disabled === 'undefined' && muiFormControl) {\r\n    disabled = muiFormControl.disabled;\r\n  }\r\n\r\n  var controlProps = {\r\n    disabled: disabled\r\n  };\r\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\r\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\r\n      controlProps[key] = props[key];\r\n    }\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\r\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\r\n    ref: ref\r\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\r\n    component: \"span\",\r\n    className: clsx(classes.label, disabled && classes.disabled)\r\n  }, label));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * If `true`, the component appears selected.\r\n   */\r\n  checked: PropTypes.bool,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\r\n   */\r\n  control: PropTypes.element.isRequired,\r\n\r\n  /**\r\n   * If `true`, the control will be disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\r\n  inputRef: refType,\r\n\r\n  /**\r\n   * The text to be used in an enclosing label element.\r\n   */\r\n  label: PropTypes.node,\r\n\r\n  /**\r\n   * The position of the label.\r\n   */\r\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  name: PropTypes.string,\r\n\r\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * The value of the component.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiFormControlLabel'\r\n})(FormControlLabel);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}