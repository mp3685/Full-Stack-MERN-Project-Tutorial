{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n    breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n    _options$disableAlign = options.disableAlign,\n    disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n    _options$factor = options.factor,\n    factor = _options$factor === void 0 ? 2 : _options$factor,\n    _options$variants = options.variants,\n    variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n  var theme = _extends({}, themeInput);\n  theme.typography = _extends({}, theme.typography);\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  var convert = convertLength(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n    if (remFontSize <= 1) {\n      return;\n    }\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\n    }\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n    var transform = null;\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return alignProperty({\n          size: value,\n          grid: fontGrid({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","map":{"version":3,"names":["_extends","formatMuiErrorMessage","_formatMuiErrorMessage","isUnitless","convertLength","responsiveProperty","alignProperty","fontGrid","responsiveFontSizes","themeInput","options","arguments","length","undefined","_options$breakpoints","breakpoints","_options$disableAlign","disableAlign","_options$factor","factor","_options$variants","variants","theme","typography","convert","htmlFontSize","breakpointValues","map","x","values","forEach","variant","style","remFontSize","parseFloat","fontSize","maxFontSize","minFontSize","lineHeight","Error","process","env","NODE_ENV","transform","value","size","grid","pixels","cssProperty","min","max","unit"],"sources":["C:/Users/mjper/OneDrive/Documents/Coding Projects/Full-Stack-MERN-Project-Tutorial/client/node_modules/@material-ui/core/esm/styles/responsiveFontSizes.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\r\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\r\nexport default function responsiveFontSizes(themeInput) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var _options$breakpoints = options.breakpoints,\r\n      breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\r\n      _options$disableAlign = options.disableAlign,\r\n      disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\r\n      _options$factor = options.factor,\r\n      factor = _options$factor === void 0 ? 2 : _options$factor,\r\n      _options$variants = options.variants,\r\n      variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\r\n\r\n  var theme = _extends({}, themeInput);\r\n\r\n  theme.typography = _extends({}, theme.typography);\r\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\r\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\r\n\r\n  var convert = convertLength(typography.htmlFontSize);\r\n  var breakpointValues = breakpoints.map(function (x) {\r\n    return theme.breakpoints.values[x];\r\n  });\r\n  variants.forEach(function (variant) {\r\n    var style = typography[variant];\r\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\r\n\r\n    if (remFontSize <= 1) {\r\n      return;\r\n    }\r\n\r\n    var maxFontSize = remFontSize;\r\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\r\n    var lineHeight = style.lineHeight;\r\n\r\n    if (!isUnitless(lineHeight) && !disableAlign) {\r\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\r\n    }\r\n\r\n    if (!isUnitless(lineHeight)) {\r\n      // make it unitless\r\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\r\n    }\r\n\r\n    var transform = null;\r\n\r\n    if (!disableAlign) {\r\n      transform = function transform(value) {\r\n        return alignProperty({\r\n          size: value,\r\n          grid: fontGrid({\r\n            pixels: 4,\r\n            lineHeight: lineHeight,\r\n            htmlFontSize: typography.htmlFontSize\r\n          })\r\n        });\r\n      };\r\n    }\r\n\r\n    typography[variant] = _extends({}, style, responsiveProperty({\r\n      cssProperty: 'fontSize',\r\n      min: minFontSize,\r\n      max: maxFontSize,\r\n      unit: 'rem',\r\n      breakpoints: breakpointValues,\r\n      transform: transform\r\n    }));\r\n  });\r\n  return theme;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}