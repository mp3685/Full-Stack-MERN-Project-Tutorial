{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nexport function isPlainObject(item) {\n  return item && _typeof(item) === 'object' && item.constructor === Object;\n}\nexport default function deepmerge(target, source) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clone: true\n  };\n  var output = options.clone ? _extends({}, target) : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(function (key) {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n      if (isPlainObject(source[key]) && key in target) {\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}","map":{"version":3,"names":["_extends","_typeof","isPlainObject","item","constructor","Object","deepmerge","target","source","options","arguments","length","undefined","clone","output","keys","forEach","key"],"sources":["C:/Users/mjper/OneDrive/Documents/Coding Projects/Full-Stack-MERN-Project-Tutorial/client/node_modules/@material-ui/utils/esm/deepmerge.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\r\nexport function isPlainObject(item) {\r\n  return item && _typeof(item) === 'object' && item.constructor === Object;\r\n}\r\nexport default function deepmerge(target, source) {\r\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\r\n    clone: true\r\n  };\r\n  var output = options.clone ? _extends({}, target) : target;\r\n\r\n  if (isPlainObject(target) && isPlainObject(source)) {\r\n    Object.keys(source).forEach(function (key) {\r\n      // Avoid prototype pollution\r\n      if (key === '__proto__') {\r\n        return;\r\n      }\r\n\r\n      if (isPlainObject(source[key]) && key in target) {\r\n        output[key] = deepmerge(target[key], source[key], options);\r\n      } else {\r\n        output[key] = source[key];\r\n      }\r\n    });\r\n  }\r\n\r\n  return output;\r\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAE;EAClC,OAAOA,IAAI,IAAIF,OAAO,CAACE,IAAI,CAAC,KAAK,QAAQ,IAAIA,IAAI,CAACC,WAAW,KAAKC,MAAM;AAC1E;AACA,eAAe,SAASC,SAASA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAChD,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG;IAChFG,KAAK,EAAE;EACT,CAAC;EACD,IAAIC,MAAM,GAAGL,OAAO,CAACI,KAAK,GAAGb,QAAQ,CAAC,CAAC,CAAC,EAAEO,MAAM,CAAC,GAAGA,MAAM;EAE1D,IAAIL,aAAa,CAACK,MAAM,CAAC,IAAIL,aAAa,CAACM,MAAM,CAAC,EAAE;IAClDH,MAAM,CAACU,IAAI,CAACP,MAAM,CAAC,CAACQ,OAAO,CAAC,UAAUC,GAAG,EAAE;MACzC;MACA,IAAIA,GAAG,KAAK,WAAW,EAAE;QACvB;MACF;MAEA,IAAIf,aAAa,CAACM,MAAM,CAACS,GAAG,CAAC,CAAC,IAAIA,GAAG,IAAIV,MAAM,EAAE;QAC/CO,MAAM,CAACG,GAAG,CAAC,GAAGX,SAAS,CAACC,MAAM,CAACU,GAAG,CAAC,EAAET,MAAM,CAACS,GAAG,CAAC,EAAER,OAAO,CAAC;MAC5D,CAAC,MAAM;QACLK,MAAM,CAACG,GAAG,CAAC,GAAGT,MAAM,CAACS,GAAG,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ;EAEA,OAAOH,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}